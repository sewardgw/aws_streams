AWSTemplateFormatVersion: 2010-09-09

Parameters:
  PublicKeyParameter:
    Type: String
    Default: abc
    Description: "Public SSH Key for Creating an AWS Glue Development Endpoint."
  OutputBucketParameter:
    Type: String
    Default: cf-firehose-bucket-test3
    Description: "S3 bucket for script output. This is used to grant write permissions to the role created by this template."
  OutputPrefixParameter:
    Type: String
    Default: parquet
    Description: "S3 prefix for script output. This is used to grant write permissions to the role created by this template."
  OutputDatabaseName:
    Type: String
    Default: cf_data
    Description: "The name of the output database that will be accessible to Athena."
  OwnerGroupName:
    Type: String
    Default: cf_core
    Description: "The group that Owns the Process"

Resources:
  
  GlueRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
        - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceNotebookRole"
      Policies:
        - PolicyName: "SourceS3Access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "s3:ListBucket"
                Effect: "Allow"
                Resource: arn:aws:s3:::cf-firehose-bucket-test2 #!Sub "arn:aws:s3:::aws-glue-datasets-${AWS::Region}"
                #Condition:
                #  StringEquals:
                #    "s3:prefix": "examples/githubarchive/month/"
              - Action:
                  - "s3:GetObject"
                Effect: "Allow"
                Resource: arn:aws:s3:::cf-firehose-bucket-test2/* #!Sub "arn:aws:s3:::aws-glue-datasets-${AWS::Region}/examples/githubarchive/month/*"
        - PolicyName: "OutputS3Access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "s3:ListBucket"
                Effect: "Allow"
                Resource: !Sub "arn:aws:s3:::${OutputBucketParameter}"
                Condition:
                  StringEquals:
                    "s3:prefix": !Sub "${OutputPrefixParameter}"
              - Action:
                  - "s3:GetObject"
                  - "s3:DeleteObject"
                  - "s3:PutObject"
                Effect: "Allow"
                Resource: !Sub "arn:aws:s3:::${OutputBucketParameter}/*"

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref GlueRole
      InstanceProfileName: !Ref GlueRole

  PartitionDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref OutputDatabaseName
        Description: "Database for Glue Partition example."

  PartitionCrawler:
    Type: 'AWS::Glue::Crawler'
    Properties:
      Role: !GetAtt GlueRole.Arn
      Description: "Sample S3 Crawler"
      DatabaseName: !Ref PartitionDatabase
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: DELETE_FROM_DATABASE
      Configuration: '{
              "Version": 1.0,
              "CrawlerOutput": {
                 "Partitions": { "AddOrUpdateBehavior": "InheritFromTable" },
                 "Tables": {"AddOrUpdateBehavior": "MergeNewColumns" }
                 }
            }'
        # Version: 1.0
        # CrawlerOutput:
        #   Partitions:
        #     AddOrUpdateBehavior: InheritFromTable
        #   Tables:
        #     AddOrUpdateBehavior: MergeNewColumns
      Targets:
        S3Targets:
          - Path: "s3://cf-firehose-bucket-test2/"

  RawDataTable:
    Type: AWS::Glue::Table
    DependsOn:
      - PartitionDatabase
    Properties:
      TableInput:
        Name: firehose_raw
        Owner: !Ref OwnerGroupName
        PartitionKeys:
        - Type: int
          Name: year
        - Type: int
          Name: month
        - Type: int
          Name: day
        - Type: int
          Name: hour
        StorageDescriptor:
          Columns:
          - Type: string
            Name: tz
          - Type: string
            Name: name
          - Type: string
            Name: created_at
          - Type: string
            Name: location
          - Type: int
            Name: user_age_at_post
          - Type: boolean
            Name: verified
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Location: s3://cf-firehose-bucket-test2/firehose/
          SerdeInfo:
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
            Parameters:
              paths: created_at,location,name,tz,user_age_at_post,verified
          SortColumns: []
          BucketColumns: []
          NumberOfBuckets: -1
          StoredAsSubDirectories: false
          Compressed: false
          Parameters:
            classification: json
        TableType: EXTERNAL_TABLE
        Retention: 0
      DatabaseName: !Ref OutputDatabaseName
      CatalogId: !Ref AWS::AccountId

  ParquetDataTable:
    Type: AWS::Glue::Table
    DependsOn:
      - PartitionDatabase
    Properties:
      TableInput:
        Name: firehose_parquet
        Owner: !Ref OwnerGroupName
        PartitionKeys:
        - Type: int
          Name: year
        - Type: int
          Name: month
        - Type: int
          Name: day
        - Type: int
          Name: hour
        StorageDescriptor:
          Columns:
          - Type: string
            Name: tz
          - Type: string
            Name: name
          - Type: string
            Name: created_at
          - Type: string
            Name: location
          - Type: int
            Name: user_age_at_post
          - Type: boolean
            Name: verified
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Location: s3://cf-firehose-bucket-test2/parquet/  # This is the pysical location of the table
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: '1'
          SortColumns: []
          BucketColumns: []
          NumberOfBuckets: -1
          StoredAsSubDirectories: false
          Compressed: false
          Parameters:
            classification: parquet
        Parameters:
          classification: parquet
        TableType: EXTERNAL_TABLE
        Retention: 0
      DatabaseName: !Ref OutputDatabaseName
      CatalogId: !Ref AWS::AccountId

  # PartitionDevEndpoint:
  #   Type: "AWS::Glue::DevEndpoint"
  #   Properties:
  #     EndpointName: partition-endpoint
  #     PublicKey: !Ref PublicKeyParameter
  #     RoleArn: !GetAtt GlueRole.Arn
